# 端数合わせ作業日報システム 仕様書

## 1. プロジェクト概要

「端数合わせ作業日報システム」は、製造現場の作業者が日々の作業における端数情報と作業時間を簡単に記録・管理するためのウェブアプリケーションです。QRコードリーダーを活用して製品情報を自動取得し、作業効率化を実現します。

## 2. システム構成

### 2.1 技術スタック

| 分類 | 使用技術 |
|------|----------|
| フロントエンド | Next.js (App Router構成) |
| バックエンド | Next.js API Routes |
| データベース | MySQL |
| ORM | Prisma |
| スタイリング | Tailwind CSS |
| デプロイ | Vercel |

### 2.2 システム構成図

```
[作業者] → [端末(QRコードリーダー)] → [ウェブアプリケーション] → [MySQL DB]
                                       ↑
                                       ↓
                                  [エクセルデータ]
                                  (自動同期)
```

## 3. 主要機能

### 3.1 作業者管理

- 作業者の登録・編集・削除
- 作業者の選択（日報入力時）
- 作業者別の日報履歴表示

### 3.2 端数合わせ日報入力

- **基本情報入力**
  - 品番（テキスト入力またはQRコード読取）
  - 箱種（A, B, C, E, G, J, K, L, Xなど）（QRコード読み取り時データベースから取得し自動入力）
  - 今回端数（整数値）
  - 前回端数（整数値または自動取得）
  - 合計端数（自動計算、整数値）
  - ロット（QRコード読み取り時データベースから取得し自動入力）

- **QRコード読取機能**
  - PCに接続したQRコードリーダーでの読取
  - 読取結果から品番・箱種・前回端数・ロットの自動入力

### 3.3 作業時間計測

- 開始・一時停止・終了ボタンによる時間管理
- リアルタイム経過時間表示（時:分:秒）
- 終了時の確認アラート
- 作業時間の自動記録

### 3.4 データ管理

- 入力データの保存（MySQL）
- 日報一覧表示（フィルタリング・ソート機能）
- データのエクスポート機能
- エクセルデータとの自動同期

## 4. データベース設計

### 4.1 テーブル構成

#### Workers テーブル
| フィールド名 | 型 | 説明 |
|------------|------|------|
| id | String @id @default(uuid()) | 作業者ID |
| name | String | 作業者名 |
| createdAt | DateTime @default(now()) | 作成日時 |
| updatedAt | DateTime @updatedAt | 更新日時 |

#### Reports テーブル
| フィールド名 | 型 | 説明 |
|------------|------|------|
| id | String @id @default(uuid()) | レポートID |
| productCode | String | 品番 |
| boxType | String | 箱種（A, B, C, E, G, J, K, L, Xなど） |
| currentFraction | Float | 今回端数 |
| previousFraction | Float | 前回端数 |
| totalFraction | Float | 合計端数 |
| lotNumber | String | ロット番号（QRコード読取から自動入力） |
| workingTimeSeconds | Int? | 作業時間（秒） |
| workerId | String | 作業者ID |
| createdAt | DateTime @default(now()) | 作成日時 |
| updatedAt | DateTime @updatedAt | 更新日時 |

#### Products テーブル (エクセルデータ同期用)
| フィールド名 | 型 | 説明 |
|------------|------|------|
| id | Int @id @default(autoincrement()) | ID |
| productCode | String @unique | 品番 |
| boxType | String | 箱種 |
| previousFraction | Float | 前回端数 |
| createdAt | DateTime @default(now()) | 作成日時 |
| updatedAt | DateTime @updatedAt | 更新日時 |

## 5. 画面設計

### 5.1 作業者選択画面
- 作業者一覧表示
- 新規作業者登録フォーム
- 作業者選択後、日報入力画面へ遷移

### 5.2 日報入力画面
- QRコード読取フィールド
- 日報入力フォーム
  - 品番、箱種（QRコード読取時自動入力）、今回端数、前回端数（自動取得）、合計端数（自動計算）、ロット（QRコード読取時自動入力）
- 作業時間計測コンポーネント
- 保存ボタン
- 日報一覧表示（同一作業者の過去データ）

### 5.3 日報一覧・管理画面
- 検索・フィルタリング機能
- 日報データの編集・削除
- データエクスポート機能

## 6. エクセルデータ連携機能

### 6.1 概要
社内オンプレミスサーバー上のエクセルファイルと、システム内のMySQLデータベースを自動同期させる機能を実装します。エクセルファイルの変更を検知し、更新された情報をデータベースに反映します。

### 6.2 同期プロセス
1. ファイル変更監視：エクセルファイルの変更を監視
2. 変更検知時、同期プロセス実行
3. エクセルファイルからデータを読込
4. MySQLデータベースへのUPSERT操作（更新または挿入）
5. 同期ログの記録

### 6.3 エラー処理
- 同期失敗時の自動リトライ機能
- 問題発生時の管理者通知
- 詳細なログ記録

## 7. 開発・デプロイフロー

### 7.1 開発環境構築
- リポジトリクローン
- 依存パッケージのインストール
- 環境変数の設定
- データベース接続設定
- 開発サーバーの起動

### 7.2 デプロイ手順
1. Vercelプロジェクト設定
2. 環境変数の設定
   - DATABASE_URL
   - DIRECT_URL
   - SYNC_API_TOKEN
3. デプロイ実行
4. データベースマイグレーション
5. エクセル同期機能の設定

## 8. セキュリティ対策

- API認証システムの実装（トークンベース）
- HTTPS通信の強制
- SQL Injection対策（Prismaの活用）
- XSS対策（React/Next.jsの活用）
- 適切なエラーハンドリング
- ログ管理と監査

## 9. 運用・保守

### 9.1 監視
- システム稼働状況の監視
- データベース同期状態の監視
- エラー発生時の通知

### 9.2 バックアップ
- データベースの定期バックアップ
- サービス中断時の復旧手順

### 9.3 拡張性
- 新規機能追加の容易さ
- スケーラビリティの確保

## 10. 今後の拡張計画

### 10.1 短期計画
- モバイル対応の強化
- ダッシュボード機能
- レポート出力機能の拡充

### 10.2 中長期計画
- エクセルデータベースからの完全移行
- 分析機能の追加
- 他システムとの連携

---

本仕様書は、「端数合わせ作業日報システム」の基本設計を示すものです。実装にあたっては、要件の詳細化や技術検証を行い、必要に応じて設計を調整することがあります。
